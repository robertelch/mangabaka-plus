{"version":3,"file":"BatoTo.reader.bundle.js","mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;UC7BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN2C;AAC3C;AACe,qBAAqB,uDAAU;AAC9C;AACA;AACA;AACA;AACA,yCAAyC,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,C","sources":["webpack://extension/./src/site-extensions/reader-base.js","webpack://extension/webpack/bootstrap","webpack://extension/webpack/runtime/define property getters","webpack://extension/webpack/runtime/hasOwnProperty shorthand","webpack://extension/webpack/runtime/make namespace object","webpack://extension/./src/site-extensions/BatoTo/reader.js"],"sourcesContent":["export default class ReaderBase {\r\n\r\n    static async getChapterList(comicId) {\r\n        throw new Error(`${this.constructor.name} must implement getChapterList(comicId)`);\r\n    }\r\n\r\n    static async _getImageLinks(chapterId) {\r\n        throw new Error(`${this.constructor.name} must implement getChapterList(chapterId)`);\r\n    }\r\n\r\n    static async #urlToB64(url) {\r\n        const response = await fetch(url);\r\n        const blob = await response.blob();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => resolve(reader.result);\r\n            reader.onerror = reject;\r\n            reader.readAsDataURL(blob); \r\n        });\r\n    }\r\n\r\n    static async getChapterImages(chapterId) {\r\n        let imageLinks = await _getImageLinks(chapterId)\r\n        let images = imageLinks.map(link => this.#urlToB64(link))\r\n        imageLinks.forEach(link => {\r\n            \r\n        });\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ReaderBase from '../reader-base.js';\r\n\r\nexport default class Reader extends ReaderBase {\r\n\r\n    static FAVICON_URL = \"https://bato.to/amsta/img/batoto/favicon.ico?v0\"\r\n\r\n    static _makeLink(id) {\r\n        return `https://bato.to/series/${id}`\r\n    }\r\n\r\n    static async getChapterList(comickId) {\r\n        const query = `\r\n            query ExampleQuery($comicId: ID) {\r\n            get_pub_chapterList(comicId: $comicId) {\r\n                data {\r\n                    serial\r\n                    id\r\n                }\r\n            }\r\n        }\r\n        `;\r\n\r\n        const res = await fetch('https://bato.to/ap2/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                query,\r\n                variables: { comicId: comickId },\r\n                operationName: 'ExampleQuery',\r\n            }),\r\n        });\r\n        const data = await res.json();\r\n        return data.data?.get_pub_chapterList?.map(item => item.data) ?? [];\r\n    }\r\n}"],"names":[],"sourceRoot":""}